{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\lenzapp\\\\face-app\\\\src\\\\pages\\\\LoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/LoginPage.js\nimport React, { useRef, useState, use } from 'react';\nimport { Container, Button, Alert } from 'react-bootstrap';\nimport { useNavigate } from 'react-router-dom';\nimport '../assets/css/CustomStyles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const videoRef = useRef(null);\n  const [error, setError] = useState(null);\n  const [authenticated, setAuthenticated] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const startVideo = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: true\n        });\n        videoRef.current.srcObject = stream;\n      } catch (err) {\n        setError('Error accessing webcam');\n      }\n    };\n    startVideo();\n  }, []);\n  const handleLogin = () => {\n    const canvas = document.createElement('canvas');\n    canvas.width = videoRef.current.videoWidth;\n    canvas.height = videoRef.current.videoHeight;\n    const context = canvas.getContext('2d');\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n    const imgUrl = canvas.toDataURL('image/png');\n\n    // Send captured image to backend for authentication\n    fetch('/api/verify-user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        image: imgUrl\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        setAuthenticated(true);\n        navigate('/dashboard'); // Navigate to Dashboard if authenticated\n      } else {\n        setError('Face not recognized. Please try again.');\n      }\n    }).catch(() => setError('Authentication failed'));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"login-page mt-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login with Face Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true,\n        muted: true,\n        width: \"500\",\n        height: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      className: \"mt-3\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), authenticated && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mt-3\",\n      children: \"Authentication successful! Redirecting to your dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"MCeWreeOP88L2aCUx4jC8wKIiEY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useRef","useState","use","Container","Button","Alert","useNavigate","jsxDEV","_jsxDEV","LoginPage","_s","videoRef","error","setError","authenticated","setAuthenticated","navigate","useEffect","startVideo","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","err","handleLogin","canvas","document","createElement","width","videoWidth","height","videoHeight","context","getContext","drawImage","imgUrl","toDataURL","fetch","method","headers","body","JSON","stringify","image","then","response","json","data","success","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","ref","autoPlay","muted","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/lenzapp/face-app/src/pages/LoginPage.js"],"sourcesContent":["// src/components/LoginPage.js\r\nimport React, { useRef, useState, use } from 'react';\r\nimport { Container, Button, Alert } from 'react-bootstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../assets/css/CustomStyles.css';\r\n\r\nconst LoginPage = () => {\r\n  const videoRef = useRef(null);\r\n  const [error, setError] = useState(null);\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const startVideo = async () => {\r\n      try {\r\n        const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n        videoRef.current.srcObject = stream;\r\n      } catch (err) {\r\n        setError('Error accessing webcam');\r\n      }\r\n    };\r\n\r\n    startVideo();\r\n  }, []);\r\n\r\n  const handleLogin = () => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = videoRef.current.videoWidth;\r\n    canvas.height = videoRef.current.videoHeight;\r\n    const context = canvas.getContext('2d');\r\n    context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\r\n\r\n    const imgUrl = canvas.toDataURL('image/png');\r\n\r\n    // Send captured image to backend for authentication\r\n    fetch('/api/verify-user', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ image: imgUrl }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.success) {\r\n          setAuthenticated(true);\r\n          navigate('/dashboard'); // Navigate to Dashboard if authenticated\r\n        } else {\r\n          setError('Face not recognized. Please try again.');\r\n        }\r\n      })\r\n      .catch(() => setError('Authentication failed'));\r\n  };\r\n\r\n  return (\r\n    <Container className=\"login-page mt-5 text-center\">\r\n      <h2>Login with Face Recognition</h2>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      <div className=\"video-container\">\r\n        <video ref={videoRef} autoPlay muted width=\"500\" height=\"400\" />\r\n      </div>\r\n      <Button variant=\"primary\" className=\"mt-3\" onClick={handleLogin}>\r\n        Login\r\n      </Button>\r\n      {authenticated && (\r\n        <Alert variant=\"success\" className=\"mt-3\">\r\n          Authentication successful! Redirecting to your dashboard...\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}